{"ast":null,"code":"var _jsxFileName = \"/Users/tech16/CodeInformatiqueXD/2048_react/2048_game/src/GameControl.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getEmptyBoard, generateRandom, moveLeft, moveRight, moveDown, moveUp, isOver, checkWin } from \"./GameBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = _ref => {\n  let {\n    number\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell cell-${number}`,\n    children: number > 0 ? number : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Cell;\n\nconst GameControl = () => {\n  _s();\n\n  const [board, updatedBoard] = useState(generateRandom(getEmptyBoard()));\n\n  const checkEndGame = () => {\n    if (checkWin(board)) {\n      console.log(\"you win\");\n    } else if (isOver(board)) {\n      console.log(\"Game Over\");\n    }\n  };\n\n  const left = () => {\n    const newBoard = moveLeft(board);\n    updatedBoard(generateRandom(newBoard));\n    checkEndGame();\n  };\n\n  const right = () => {\n    const newBoard = moveRight(board);\n    updatedBoard(generateRandom(newBoard));\n    checkEndGame();\n  };\n\n  const up = () => {\n    const newBoard = moveUp(board);\n    updatedBoard(generateRandom(newBoard));\n    checkEndGame();\n  };\n\n  const down = () => {\n    const newBoard = moveDown(board);\n    updatedBoard(generateRandom(newBoard));\n    checkEndGame();\n  };\n\n  const onKeyDown = e => {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        left();\n        break;\n\n      case \"ArrowRight\":\n        left();\n        break;\n\n      case \"ArrowUp\":\n        up();\n        break;\n\n      case \"ArrowDown\":\n        down();\n        break;\n\n      default:\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: board.map((row, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(Cell, {\n            number: cell\n          }, `cell-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this))\n        }, `row-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameControl, \"LNWE8OJmwR/KDasxPxEI1z9qn+E=\");\n\n_c2 = GameControl;\nexport default GameControl;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"GameControl\");","map":{"version":3,"sources":["/Users/tech16/CodeInformatiqueXD/2048_react/2048_game/src/GameControl.js"],"names":["useEffect","useState","getEmptyBoard","generateRandom","moveLeft","moveRight","moveDown","moveUp","isOver","checkWin","Cell","number","GameControl","board","updatedBoard","checkEndGame","console","log","left","newBoard","right","up","down","onKeyDown","e","key","window","addEventListener","removeEventListener","map","row","i","cell","j"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n    getEmptyBoard,\n    generateRandom,\n    moveLeft,\n    moveRight,\n    moveDown,\n    moveUp,\n    isOver,\n    checkWin\n} from \"./GameBoard\";\n\nconst Cell = ({ number }) => {\n    return (\n        <div className={`cell cell-${number}`}>{number > 0 ? number: \"\"}</div>\n    );\n};\n\nconst GameControl = () => {\n    const [board, updatedBoard] = useState(generateRandom(getEmptyBoard()));\n\n    const checkEndGame = () => {\n        if (checkWin(board)) {\n            console.log(\"you win\");\n        } else if (isOver(board)) {\n            console.log(\"Game Over\");\n        }\n    };\n\n    const left = () => {\n        const newBoard = moveLeft(board);\n        updatedBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const right = () => {\n        const newBoard = moveRight(board);\n        updatedBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const up = () => {\n        const newBoard = moveUp(board);\n        updatedBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const down = () => {\n        const newBoard = moveDown(board);\n        updatedBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const onKeyDown = (e) => {\n        switch (e.key) {\n            case \"ArrowLeft\":\n                left();\n                break;\n            case \"ArrowRight\":\n                left();\n                break;\n            case \"ArrowUp\":\n                up();\n                break;\n            case \"ArrowDown\":\n                down();\n                break;\n            default:\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", onKeyDown);\n\n        return () => {\n            window.removeEventListener(\"keydown\", onKeyDown);\n        };\n    });\n\n    return (\n        <div>\n            <div className=\"game-board\">\n                {board.map((row, i ) => {\n                    return (\n                        <div key={`row-${i}`} className=\"row\">\n                            {row.map((cell, j) => (\n                                <Cell key={`cell-${i}-${j}`} number={cell} />\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default GameControl;"]},"metadata":{},"sourceType":"module"}